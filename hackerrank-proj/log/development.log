  [1m[35m (0.3ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ bin/rails:9
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:9
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ bin/rails:9
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
Migrating to CreateLinks (20190113211523)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "links" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "url" varchar, "description" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/migrate/20190113211523_create_links.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20190113211523"]]
  â†³ bin/rails:9
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:15:34.678163"], ["updated_at", "2019-01-13 21:15:34.678163"]]
  â†³ bin/rails:9
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mLink Create (1.3ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "http://graphql.org/"], ["description", "The Best Query Language"], ["created_at", "2019-01-13 21:17:13.909294"], ["updated_at", "2019-01-13 21:17:13.909294"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mLink Create (0.4ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "http://dev.apollodata.com/"], ["description", "Awesome GraphQL Client"], ["created_at", "2019-01-13 21:17:23.780567"], ["updated_at", "2019-01-13 21:17:23.780567"]]
  [1m[35m (2.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mLink Load (1.8ms)[0m  [1m[34mSELECT  "links".* FROM "links" LIMIT ?[0m  [["LIMIT", 11]]
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:16:48 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1383.2ms)
Completed 200 OK in 1433ms (Views: 1404.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:16:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 158ms (Views: 24.9ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:22:42 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.7ms)
Completed 200 OK in 52ms (Views: 45.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:22:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 58ms (Views: 21.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:22:49 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (9.8ms)
Completed 200 OK in 31ms (Views: 26.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:22:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 93ms (Views: 25.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:22:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n", "variables"=>nil, "graphql"=>{"query"=>"\n", "variables"=>nil}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:22:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n", "variables"=>nil, "graphql"=>{"query"=>"\n", "variables"=>nil}}
Completed 200 OK in 4ms (Views: 1.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:23:02 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.9ms)
Completed 200 OK in 54ms (Views: 45.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:23:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 56ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:23:33 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (9.1ms)
Completed 200 OK in 31ms (Views: 24.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:23:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 44ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:23:41 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (10.1ms)
Completed 200 OK in 35ms (Views: 25.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:23:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 39ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:24:00 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.3ms)
Completed 200 OK in 42ms (Views: 32.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:24:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 46ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:38:57 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.2ms)
Completed 200 OK in 35ms (Views: 28.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:38:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 38ms (Views: 9.9ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:39:00 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (10.9ms)
Completed 200 OK in 41ms (Views: 32.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 28ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:39:04 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (12.7ms)
Completed 200 OK in 37ms (Views: 30.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 74ms (Views: 13.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:39:06 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (11.4ms)
Completed 200 OK in 43ms (Views: 35.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 43ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 43ms (Views: 12.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allLinks {\n    url\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allLinks {\n    url\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (0.6ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 35ms (Views: 0.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allLinks {\n    url\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allLinks {\n    url\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (0.2ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allLinks {\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allLinks {\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (0.2ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.2ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 20:24:07 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.5ms)
Completed 200 OK in 44ms (Views: 37.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 20:24:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 18ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/rohailkabani/Desktop/graphql-ruby/hackerrank-proj/app/graphql/resolvers/create_link.rb:10: syntax error, unexpected tIDENTIFIER, expecting ')'
            url: args[:url]
            ^~~
/Users/rohailkabani/Desktop/graphql-ruby/hackerrank-proj/app/graphql/resolvers/create_link.rb:11: syntax error, unexpected ')', expecting keyword_end
        )
        ^):
  
app/graphql/resolvers/create_link.rb:10: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/resolvers/create_link.rb:11: syntax error, unexpected ')', expecting keyword_end
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/hackerrank_proj_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 20:24:48 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rohailkabani/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (254.8ms)
Completed 200 OK in 283ms (Views: 271.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 20:24:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 18ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/rohailkabani/Desktop/graphql-ruby/hackerrank-proj/app/graphql/resolvers/create_link.rb:10: syntax error, unexpected tIDENTIFIER, expecting ')'
            url: args[:url]
            ^~~
/Users/rohailkabani/Desktop/graphql-ruby/hackerrank-proj/app/graphql/resolvers/create_link.rb:11: syntax error, unexpected ')', expecting keyword_end
        )
        ^):
  
app/graphql/resolvers/create_link.rb:10: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/resolvers/create_link.rb:11: syntax error, unexpected ')', expecting keyword_end
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/hackerrank_proj_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 20:25:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createLink (\n    url: \"google.com\",\n    description:\"Best search engine in the world!\"\n  ) { \n  \turl\n    description\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  createLink (\n    url: \"google.com\",\n    description:\"Best search engine in the world!\"\n  ) { \n  \turl\n    description\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/rohailkabani/Desktop/graphql-ruby/hackerrank-proj/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/hackerrank_proj_schema.rb:2:in `block in <main>'
app/graphql/hackerrank_proj_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 20:26:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createLink (\n    url: \"google.com\",\n    description:\"Best search engine in the world!\"\n  ) { \n  \turl\n    description\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  createLink (\n    url: \"google.com\",\n    description:\"Best search engine in the world!\"\n  ) { \n  \turl\n    description\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ app/graphql/resolvers/create_link.rb:8
  [1m[36mLink Create (0.5ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "google.com"], ["description", "Best search engine in the world!"], ["created_at", "2019-01-14 01:26:45.270343"], ["updated_at", "2019-01-14 01:26:45.270343"]]
  â†³ app/graphql/resolvers/create_link.rb:8
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  â†³ app/graphql/resolvers/create_link.rb:8
Completed 200 OK in 29ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 20:27:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createLink (\n    url: \"google.com\",\n    description:\"Best search engine in the world!\"\n  ) { \n    id\n  \turl\n    description\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  createLink (\n    url: \"google.com\",\n    description:\"Best search engine in the world!\"\n  ) { \n    id\n  \turl\n    description\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ app/graphql/resolvers/create_link.rb:8
  [1m[36mLink Create (0.4ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "google.com"], ["description", "Best search engine in the world!"], ["created_at", "2019-01-14 01:27:04.608285"], ["updated_at", "2019-01-14 01:27:04.608285"]]
  â†³ app/graphql/resolvers/create_link.rb:8
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ app/graphql/resolvers/create_link.rb:8
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.5ms)


